name: Art Runner Testing

on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  repository_dispatch:
    types: [retry_job]
    # inputs:
    #   artifact:
    #     description: 'Name of the artifact to download'
    #     required: true
    #   start-bucket-name:
    #     description: 'Name of the bucket'
    #     required: true


jobs:

  build:
    runs-on: genies-internal-art-runner-testing
    # timeout-minutes: 1
    env:
      start_bucket_name: "genies-asset-bucket-test"
      result_bucket_name: "runner-poc-testing-result"
      asset: "0a225c6b-c9c3-47b2-8818-de8a86a89190.zip"
      
    steps:
      - name: test
        run: ls ~/
        
      # # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # # - uses: actions/checkout@v3
      # - name: Setup docker cache
      #   run: |
      #     docker load -i /cache/ubuntu-2021.3.16f1-ios-1.0.1.tar
      #     docker tag unityci/editor:ubuntu-2021.3.16f1-ios-1.0.1 608392574519.dkr.ecr.us-west-2.amazonaws.com/unityci-editor:ubuntu-2021.3.26f1-ios-1

      
      # - name: Install AWS cli
      #   uses: unfor19/install-aws-cli-action@v1

      # # - name: Assume an AWS role
      # #   uses: aws-actions/configure-aws-credentials@v1
      # #   with:
      # #     role-to-assume: arn:aws:iam::583625886946:role/genies_deployer-role #arn:aws:iam::608392574519:role/devkit-s3-manager
      # #     aws-region: us-west-2
      # - name: Set up AWS CLI
      #   uses: aws-actions/configure-aws-credentials@v3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_RUNNERS_DEV_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.AWS_RUNNERS_DEV_SECRET_KEY }}
      #     aws-region: 'us-west-2'
        
      # - name: Download a file from the starting bucket
      #   run: |
      #     aws s3 cp s3://${{ env.start_bucket_name }}/${{ env.asset }} ${{ env.asset }}
      #   shell: bash
        
      # # Build
      # # - name: Build Addressables Content for android
      # #   uses: geniesinc/game-ci-unity-builder@raad/no-quit
      # #   env:
      # #     UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      # #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      # #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      # #   with:
      # #     targetPlatform: 'android'
      # #     buildMethod: 'Genies.Editor.Build.HeadlessDynamicBuildScript.HeadlessBuild'
      # #     customParameters: '-packageUrlOrPath ${{ env.asset }} -platforms android -buildProfile Dynamic'


      # - name: Get current day of year
      #   id: day-of-year
      #   run: echo "day=$(date +'%j')" >> $GITHUB_OUTPUT

      # # Get unity version to use with caching
      # - name: Get Unity version
      #   id: unity-version
      #   uses: appegy/unity-version-action@v1 

      # # Cache unity library, the cache will live for a day,
      # # so first build of the day might be slower on a target platform but
      # # later builds (on any branch or workflow) will be hitting the cache
      # # Note:
      # # restore-keys: will potentially have a cache hit on an older cache that hasn't expired.
      # - uses: actions/cache@v3
      #   id: cache
      #   with:
      #     path: |
      #       Library
      #     key: Library-${{ steps.unity-version.outputs.unity-version }}
      #       Library-${{ steps.unity-version.outputs.unity-version }}


      # - name: Build Unity
      #   id: build-unity
      #   uses: geniesinc/game-ci-unity-builder@raad/no-quit
      #   with:
      #     buildMethod: ProcSkinningHeadless.CreateThingRig
      #     customParameters: > 
      #                       -logFile createThingRig_Log.txt
      #                       -AssetArchive ${{ env.asset }}
      #     allowDirtyBuild: true
      #   env:
      #     UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
      #     UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
      #     UNITY_SERIAL: ${{ secrets.UNITY_SERIAL }}
      
      
      # - name: Upload a processed file to S3
      #   run: |
      #     aws s3 cp ${{ inputs.artifact }} s3://${{ env.result_bucket_name }}/processed-${{ inputs.artifact }}
      #   shell: bash
